{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { onRequest } from \"../common/axios\"; // import { getPosts } from \"../Redux/Post\";\n\nimport { getPosts } from \"../Redux/Post\";\nexport const useHome = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const fetchPosts = async () => {\n    try {\n      const response = await onRequest();\n      console.log(\"keep going\");\n\n      if (response.status === 200) {\n        const post = response.data;\n        console.log(post);\n        dispatch(getPosts(post));\n        console.log(\"success\");\n      } else {\n        throw response;\n      }\n    } catch (e) {\n      console.log(\"Error\");\n    }\n  };\n\n  return {\n    fetchPosts\n  };\n};\n\n_s(useHome, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"sources":["/Users/gimtaewon/Documents/frontend/React_Practice/src/pages/useHome.js"],"names":["useDispatch","onRequest","getPosts","useHome","dispatch","fetchPosts","response","console","log","status","post","data","e"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,iBAA1B,C,CACA;;AACA,SAASC,QAAT,QAAyB,eAAzB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAEA,QAAMK,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAML,SAAS,EAAhC;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AAEA,UAAIF,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,IAAI,GAAGJ,QAAQ,CAACK,IAAtB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AAEAN,QAAAA,QAAQ,CAACF,QAAQ,CAACQ,IAAD,CAAT,CAAR;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OAND,MAMO;AACL,cAAMF,QAAN;AACD;AACF,KAdD,CAcE,OAAOM,CAAP,EAAU;AACVL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,GAlBD;;AAoBA,SAAO;AACLH,IAAAA;AADK,GAAP;AAGD,CA1BM;;GAAMF,O;UACMH,W","sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { onRequest } from \"../common/axios\";\n// import { getPosts } from \"../Redux/Post\";\nimport { getPosts } from \"../Redux/Post\";\n\nexport const useHome = () => {\n  const dispatch = useDispatch();\n\n  const fetchPosts = async () => {\n    try {\n      const response = await onRequest();\n\n      console.log(\"keep going\");\n\n      if (response.status === 200) {\n        const post = response.data;\n        console.log(post);\n\n        dispatch(getPosts(post));\n        console.log(\"success\");\n      } else {\n        throw response;\n      }\n    } catch (e) {\n      console.log(\"Error\");\n    }\n  };\n\n  return {\n    fetchPosts,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}