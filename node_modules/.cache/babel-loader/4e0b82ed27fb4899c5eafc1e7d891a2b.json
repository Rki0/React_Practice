{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from \"react\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        loading: true,\n        data: null,\n        error: null\n      };\n\n    case \"SUCCESS\":\n      return {\n        loading: false,\n        data: action.data,\n        error: null\n      };\n\n    case \"ERROR\":\n      return {\n        loading: false,\n        data: null,\n        error: action.error\n      };\n\n    default:\n      return new Error(`Unhandled action type : ${action.type}`);\n  }\n}\n\nfunction useAsync(callback) {\n  _s();\n\n  let deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let skip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: null\n  });\n\n  const fetchData = async () => {\n    dispatch({\n      type: \"LOADING\"\n    });\n\n    try {\n      const data = await callback();\n      dispatch({\n        type: \"SUCCESS\",\n        data\n      });\n    } catch (e) {\n      dispatch({\n        type: \"ERROR\",\n        error: e\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (skip) return;\n    fetchData();\n  }, deps);\n  return [state, fetchData];\n}\n\n_s(useAsync, \"22MxLaQTBhfVMDRfVUYgJvRNVJc=\");\n\nexport default useAsync;","map":{"version":3,"sources":["/Users/gimtaewon/Documents/frontend/React_Practice/src/useAsync.js"],"names":["useEffect","useReducer","reducer","state","action","type","loading","data","error","Error","useAsync","callback","deps","skip","dispatch","fetchData","e"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAMF,SAAK,SAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFR;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAMF,SAAK,OAAL;AACE,aAAO;AACLF,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAHT,OAAP;;AAMF;AACE,aAAO,IAAIC,KAAJ,CAAW,2BAA0BL,MAAM,CAACC,IAAK,EAAjD,CAAP;AAvBJ;AAyBD;;AAED,SAASK,QAAT,CAAkBC,QAAlB,EAAqD;AAAA;;AAAA,MAAzBC,IAAyB,uEAAlB,EAAkB;AAAA,MAAdC,IAAc,uEAAP,KAAO;AACnD,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBb,UAAU,CAACC,OAAD,EAAU;AAC5CI,IAAAA,OAAO,EAAE,KADmC;AAE5CC,IAAAA,IAAI,EAAE,IAFsC;AAG5CC,IAAAA,KAAK,EAAE;AAHqC,GAAV,CAApC;;AAMA,QAAMO,SAAS,GAAG,YAAY;AAC5BD,IAAAA,QAAQ,CAAC;AAAET,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAME,IAAI,GAAG,MAAMI,QAAQ,EAA3B;AACAG,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE,SAAR;AAAmBE,QAAAA;AAAnB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOS,CAAP,EAAU;AACVF,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE,OAAR;AAAiBG,QAAAA,KAAK,EAAEQ;AAAxB,OAAD,CAAR;AACD;AACF,GARD;;AAUAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,IAAJ,EAAU;AACVE,IAAAA,SAAS;AACV,GAHQ,EAGNH,IAHM,CAAT;AAKA,SAAO,CAACT,KAAD,EAAQY,SAAR,CAAP;AACD;;GAvBQL,Q;;AAyBT,eAAeA,QAAf","sourcesContent":["import { useEffect, useReducer } from \"react\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        loading: true,\n        data: null,\n        error: null,\n      };\n\n    case \"SUCCESS\":\n      return {\n        loading: false,\n        data: action.data,\n        error: null,\n      };\n\n    case \"ERROR\":\n      return {\n        loading: false,\n        data: null,\n        error: action.error,\n      };\n\n    default:\n      return new Error(`Unhandled action type : ${action.type}`);\n  }\n}\n\nfunction useAsync(callback, deps = [], skip = false) {\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: null,\n  });\n\n  const fetchData = async () => {\n    dispatch({ type: \"LOADING\" });\n    try {\n      const data = await callback();\n      dispatch({ type: \"SUCCESS\", data });\n    } catch (e) {\n      dispatch({ type: \"ERROR\", error: e });\n    }\n  };\n\n  useEffect(() => {\n    if (skip) return;\n    fetchData();\n  }, deps);\n\n  return [state, fetchData];\n}\n\nexport default useAsync;\n"]},"metadata":{},"sourceType":"module"}