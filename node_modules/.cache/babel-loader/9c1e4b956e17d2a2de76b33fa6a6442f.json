{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onRequest } from \"../common/axios\"; // import { getPosts } from \"../Redux/Post\";\n\nimport { getPosts } from \"../Redux/Post\";\nimport { fetchPosts } from \"../Redux/Post\";\nexport const useHome = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n  console.log(\"dfjla\", posts);\n  const getPosts = useCallback(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n  return {\n    posts,\n    getPosts\n  };\n};\n\n_s(useHome, \"c8GOUmStB3QOF2BvC8ugFvfDx10=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"sources":["/Users/gimtaewon/Documents/frontend/React_Practice/src/pages/useHome.js"],"names":["useCallback","useDispatch","useSelector","onRequest","getPosts","fetchPosts","useHome","dispatch","posts","state","console","log"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,iBAA1B,C,CACA;;AACA,SAASC,QAAT,QAAyB,eAAzB;AAEA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,KAAK,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYA,KAAxB,CAAzB;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AAEA,QAAMJ,QAAQ,GAAGJ,WAAW,CAAC,MAAM;AACjCO,IAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACD,GAF2B,EAEzB,CAACE,QAAD,CAFyB,CAA5B;AAIA,SAAO;AACLC,IAAAA,KADK;AAELJ,IAAAA;AAFK,GAAP;AAID,CAdM;;GAAME,O;UACML,W,EACHC,W","sourcesContent":["import { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { onRequest } from \"../common/axios\";\n// import { getPosts } from \"../Redux/Post\";\nimport { getPosts } from \"../Redux/Post\";\n\nimport { fetchPosts } from \"../Redux/Post\";\n\nexport const useHome = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts.posts);\n\n  console.log(\"dfjla\", posts);\n\n  const getPosts = useCallback(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  return {\n    posts,\n    getPosts,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}