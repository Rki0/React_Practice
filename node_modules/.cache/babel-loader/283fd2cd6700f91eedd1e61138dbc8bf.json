{"ast":null,"code":"var _jsxFileName = \"/Users/gimtaewon/Documents/frontend/React_Practice/src/components/PostUser.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport GetUsers from \"../pages/GetUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostUser(_ref) {\n  _s();\n\n  let {\n    id,\n    username,\n    name,\n    createUserId,\n    createUserName,\n    createName\n  } = _ref;\n  // input을 보여주기 위해 사용됨.\n  const [usernameInput, setUserName] = useState(\"\");\n  const [nameInput, setName] = useState(\"\");\n  const [userIdInput, setUserId] = useState(\"\"); // state props를 url에 post함.\n\n  async function PostToUsers(id, username, name) {\n    await axios.post(\"http://localhost:8000/users\", {\n      id,\n      username,\n      name\n    });\n  } // input을 보여주기 위해 setState.\n  // state props를 업데이트하기 위해 createState. id, username, name이 업데이트 됨.\n\n\n  const onChangeUserId = e => {\n    setUserId(e.target.value);\n    createUserId(parseInt(e.target.value, 10));\n  };\n\n  const onChangeUsername = e => {\n    setUserName(e.target.value);\n    createUserName(e.target.value);\n  };\n\n  const onChangeName = e => {\n    setName(e.target.value);\n    createName(e.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // 업데이트 된 state props를 PostToUsers()에 파라미터로 전달.\n\n    PostToUsers(id, username, name);\n    setUserId(\"\");\n    setUserName(\"\");\n    setName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"POST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GetUsers, {\n      title: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Id which want to Add\",\n        value: userIdInput,\n        onChange: onChangeUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: usernameInput,\n        placeholder: \"Write Your username\",\n        onChange: onChangeUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nameInput,\n        placeholder: \"Write Your name\",\n        onChange: onChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostUser, \"jEAzSr50r9k8XtumC5cRnlkHqAY=\");\n\n_c = PostUser;\nexport default PostUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostUser\");","map":{"version":3,"sources":["/Users/gimtaewon/Documents/frontend/React_Practice/src/components/PostUser.js"],"names":["axios","useState","GetUsers","PostUser","id","username","name","createUserId","createUserName","createName","usernameInput","setUserName","nameInput","setName","userIdInput","setUserId","PostToUsers","post","onChangeUserId","e","target","value","parseInt","onChangeUsername","onChangeName","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport GetUsers from \"../pages/GetUsers\";\n\nfunction PostUser({\n  id,\n  username,\n  name,\n  createUserId,\n  createUserName,\n  createName,\n}) {\n  // input을 보여주기 위해 사용됨.\n  const [usernameInput, setUserName] = useState(\"\");\n  const [nameInput, setName] = useState(\"\");\n  const [userIdInput, setUserId] = useState(\"\");\n\n  // state props를 url에 post함.\n  async function PostToUsers(id, username, name) {\n    await axios.post(\"http://localhost:8000/users\", {\n      id,\n      username,\n      name,\n    });\n  }\n\n  // input을 보여주기 위해 setState.\n  // state props를 업데이트하기 위해 createState. id, username, name이 업데이트 됨.\n  const onChangeUserId = (e) => {\n    setUserId(e.target.value);\n    createUserId(parseInt(e.target.value, 10));\n  };\n\n  const onChangeUsername = (e) => {\n    setUserName(e.target.value);\n    createUserName(e.target.value);\n  };\n\n  const onChangeName = (e) => {\n    setName(e.target.value);\n    createName(e.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    // 업데이트 된 state props를 PostToUsers()에 파라미터로 전달.\n    PostToUsers(id, username, name);\n\n    setUserId(\"\");\n    setUserName(\"\");\n    setName(\"\");\n  };\n\n  return (\n    <div>\n      <h1>POST</h1>\n      <GetUsers title=\"User List\" />\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Id which want to Add\"\n          value={userIdInput}\n          onChange={onChangeUserId}\n        />\n        <input\n          type=\"text\"\n          value={usernameInput}\n          placeholder=\"Write Your username\"\n          onChange={onChangeUsername}\n        />\n        <input\n          type=\"text\"\n          value={nameInput}\n          placeholder=\"Write Your name\"\n          onChange={onChangeName}\n        />\n        <button type=\"submit\">Post</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PostUser;\n"]},"metadata":{},"sourceType":"module"}